 #!/usr/bin/expect --   
set rfile  [lindex $argv 0]
set results_file  [lindex $argv 1]
set homedir  [lindex $argv 2]
set ksh_pid [spawn /bin/bash -l ]

set prompt "(%|>|#|\\$) $"          ;# default prompt

catch {set prompt $env(EXPECT_PROMPT)}

expect -re $prompt

send "export homedir=$homedir \r"

expect -re $prompt

send "cd $homedir \r"

expect -re $prompt

send "chk_out_scripts \r"

expect -re $prompt

send "cd ~/bfb_testing/intel \r"

expect -re $prompt

send "rm -rf esmf \r"

expect -re $prompt

set timeout 900
send "git clone https://github.com/esmf-org/esmf esmf \r"


expect eof

expect -re $prompt

send " cd ~/bfb_testing/intel \r"

expect -re $prompt

send " rm -rf esmf-extended-tests \r"

expect -re $prompt

send "git clone git@github.com:esmf-org/esmf-extended-tests.git \r"

expect eof

expect -re $prompt
 
send "  cd ~/bfb_testing/intel/esmf-extended-tests/ESMF_RegridWeightGenCheck \r"

expect -re $prompt

send " export ESMFMKFILE=~/bfb_testing/intel/install_dir/lib/libg/Linux.intel.64.intelmpi.default/esmf.mk \r"

expect -re $prompt

set timeout 600
send "gmake dryrun \r"

expect -re $prompt

send " export ESMFMKFILE=~/bfb_testing/intel/install_dir/lib/libO/Linux.intel.64.intelmpi.default/esmf.mk \r"

expect -re $prompt

set timeout 600
send "gmake dryrun \r"

expect -re $prompt

send "export homedir=$homedir \r"

expect -re $prompt

send "cd $homedir \r"

expect -re $prompt

spawn qsub -I -l select=1:ncpus=36:mpiprocs=36 -l walltime=11:00:00 -q regular -A P93300606
set timeout 540000
expect {
        timeout
                {
                        puts "detected queue timeout"
                        set file [ open $results_file w]
                        puts $file "error"
                        send "kill -9 $bash_pid\r"
                }
        "ready" 
                {
                        send "cd $homedir \r"
      
                        expect -re $prompt
                }
    
        }
            
    
 
# 4:15  hours
set timeout 153000
send "./cheyenne_script  $rfile  \r"

expect {
                "end of test script"
                {
                        puts "detected end of test script"
                        set file [ open $results_file w]
                        puts $file "normal"
                        send "kill -9 $ksh_pid\r"
                }
                timeout
                {
                        puts "detected timeout"
                        set file [ open $results_file w]
                        puts $file "error"
                        send "kill -9 $ksh_pid\r"
                }
	}
