#!/bin/bash -l
rfile=$1


export homedir=~/bfb_testing/intel

export PATH=~/bin:$PATH

############################### Read the file for log directory and email recipient #######

datestamp=`date +%y%m`
logfile="${datestamp}_test"
echo " The logfile is $logfile"
here=`pwd`


if grep -i "LOG_DIR1" $rfile > tmp
then
        read location log_dir log_tmp < tmp
        cd $log_dir
        if test ! -d  $logfile
        then
                # Make new directory if doesn't exist
                mkdir $logfile
        fi
        cd $here
        echo "LOGDIR1 is $log_dir/$logfile"
        export LOGDIR=$log_dir/$logfile
fi


if grep -i "email_to" $rfile > tmp
then
        read location emailuser < tmp
        echo "Email user is $emailuser"
fi

if grep -i "email_title" $rfile > tmp
then
        read location email_title < tmp
        echo "Email title is $email_title"
fi


rm -f tmp

rm -f $LOGDIR/mailMessage
rm -f $LOGDIR/newMailMessage
rm -f $LOGDIR/header
rm -f $LOGDIR/mailHeader
rm -f $LOGDIR/newsummary
rm -f $LOGDIR/sum
rm -f $LOGDIR/summary

echo "" > $LOGDIR/header
echo "Script start time: `date`" >> $LOGDIR/header

# Set test status as green, assume it will run clean
echo "Test_results:green" > $LOGDIR/Test_Status

#Set day of the week
echo "Day_of_Week:`date +%A`" > $LOGDIR/Day_Started

#Set Number of test failure
echo "0" > $LOGDIR/Test_Failures

cd $homedir

chk_out_scripts

#chmod a+x $homedir/bin/*

#$homedir/bin/chk_out_esmf $rfile $ESMF_Yellowstone_intel


############################# Run the tests ###############################

number=1
while grep "^$number " $rfile >tmp
do
	# Get the computer information
        read num location directory hostname abi site comp comm u_tests u_tests_type sys_test_type threaded mpmd ck_out_opt tag < tmp
        echo "$location $directory $hostname $abi $site $comp $comm $u_tests $u_tests_type $sys_test_type $threaded $mpmd $ck_out_opt $tag"
        cat tmp

	export ESMF_OS=`uname -s`
	export ESMF_DIR=~/bfb_testing/intel/esmf
	export LOGTMP=$log_tmp
	export OPT=g
	export ESMF_BOPT=g
	export SYS_TEST_TYPE=$sys_test_type
	export U_TESTS=$u_tests
	export U_TESTS_TYPE=$u_tests_type
	export ESMF_ABI=$abi
	export ESMF_SITE=$site
	export ESMF_COMPILER=$comp
	export ESMF_COMM=$comm
	export THREADED=$threaded
        export ESMF_INSTALL_PREFIX=~/bfb_testing/intel/install_dir
	export ESMF_TESTHARNESS_FIELD=RUN_ESMF_TestHarnessField_1
        export ESMF_TESTHARNESS_ARRAY=RUN_ESMF_TestHarnessArray_2
        export ESMF_MPIRUN=mpirun
	#export ESMFMKFILE=$ESMF_INSTALL_PREFIX/lib/libO/Linux.intel.64.intelmpi.default/esmf.mk
	#export PATH=$ESMF_INSTALL_PREFIX/bin/binO/Linux.intel.64.intelmpi.default/:$PATH
	export ESMF_OPTLEVEL=2
	export ESMF_F90COMPILEOPTS="-g -traceback -fp-model precise"
	export ESMF_CXXCOMPILEOPTS="-g -traceback -fp-model precise"
	export ESMF_BASELINE_DIR=
	export ESMF_BASELINE_REF=ESMF_8_1_0_beta_snapshot_08
	export ESMF_NUM_PROCS=16
	export NUM_PETS=16



        rm -rf $ESMF_INSTALL_PREFIX/*
        if [[ $threaded = "THREADED" ]]
        then
                export ESMF_TESTWITHTHREADS=ON 
        else
                export ESMF_TESTWITHTHREADS=OFF
        fi 
        if [[ $u_tests = "EX" ]]
        then
                export ESMF_TESTEXHAUSTIVE=ON
        else 
                export ESMF_TESTEXHAUSTIVE=OFF
        fi 

        if [[ $mpmd = "MPMD" ]]
        then
                export ESMF_TESTMPMD=ON
        else
                export ESMF_TESTMPMD=OFF
        fi

	if [[ $ESMF_COMPILER = "intel" ]]
        then
                export ESMF_COMPILER=intel
                module load intel
                module load netcdf
                module load pnetcdf
		module load nccmp
                
        fi

        if [[ $ESMF_COMM = "impi" ]]
        then
        export ESMF_COMM=intelmpi
        module load impi
        fi
	
        export ESMF_MPIRUN=mpirun

        export ESMF_NETCDF=nc-config

        export RFile=$rfile
	echo "ESMF_DIR = $ESMF_DIR"
	cd $ESMF_DIR
	export OPT=O
	export ESMF_BOPT=O
	export ESMFMKFILE=$ESMF_INSTALL_PREFIX/lib/libO/Linux.intel.64.intelmpi.default/esmf.mk
	export PATH=$ESMF_INSTALL_PREFIX/bin/binO/Linux.intel.64.intelmpi.default/:$PATH
#	$homedir/test_external_demos_noq
	$homedir/bin/test_bfb
        #$homedir/bin/bfb_comp
	cd $homedir
        number=`expr $number + 1`
        echo "number = $number"
done
cd $homedir



echo "end of test script"
exit

